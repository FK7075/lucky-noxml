#### lucky.config.location -指定运行时配置文件
#### server.port           -指定运行端口
##   java -jar -Dlucky.config.location=appconfig.ini -Dserver.port=8082 luckyapp.jar
##   java -jar luckyapp.jar lucky.config.location=appconfig.ini server.port=8082
###  当Tomcat启动时发生阻塞，请加上-Djava.security.egd=file:/dev/./urandom 参数

#多数据源配置
[DataSources]
dbname=ZheJiang,GuangDong

#数据库配置
[Jdbc]
##使用的数据库连接池类型[c3p0/HikariCP]
poolType=HikariCP
##数据库地址##
jdbcUrl=jdbc:mysql://127.0.0.1:3306/jacklamb?useUnicode=true&characterEncoding=utf8
##数据库驱动##
driverClass=com.mysql.jdbc.Driver
## 登录名##
username=root
##密码##
password=123456
##是否打印SQL日志##
log=false
##是否显示完整SQL(比较耗费性能，默认为false)
showCompleteSQL=false
##是否开启缓存,默认为开启转态##
cache=true
##缓存类别「Java或者Redis」
cacheType=Redis/Java
##Redis缓存的过期时间
cacheExpiredTime=0
##设置缓存的大小,默认为50##
cacheCapacity=50
##是否打印格式化的SQL日志##
formatSqlLog=false
##自动建表，配置需要建表机制操作的实体类的包路径##
createTable=table1,table2,table3
##自动建表操作具体要操作的实体类##
table1=com.jacklamb.lucky.entity.Book
table2=com.jacklamb.lucky.entity.Stort
table3=com.jacklamb.lucky.entity.Authod
##逆向工程,配置用于存放生成的实体类的包##
reversePack=com.jacklamb.lucky.pojo
##项目classpath(src)的绝对路径##
srcPath=C:\Users\DELL\git\lucky-ex\src
####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####
####                                                           ####
####    C3P0和HikariCP的一些特殊配置请参照C3p0.ini和HikariCP.ini   ####
####                                                           ####
####@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@####

[Redis]
#数据库编号
dbNumber=0
#Matser的ip地址
host=127.0.0.1
#端口号
port=6379
#如果有密码
password=
#客户端超时时间单位是毫秒 默认是2000
timeout=10000
#最大空闲数
maxIdle=300
#连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal
maxActive=600
#控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
maxTotal=1000
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
maxWaitMillis=1000
#连接的最小空闲时间 默认1800000毫秒(30分钟)
minEvictableIdleTimeMillis=300000
#每次释放连接的最大数目,默认3
numTestsPerEvictionRun=1024
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
timeBetweenEvictionRunsMillis=30000
#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
testOnBorrow=true
#在空闲时检查有效性, 默认false
testWhileIdle=true

#更换Tomcat配置
[Tomcat]
##接收请求的端口
port=8080
##session超时时间（分钟）
sessionTimeout=30
##RealPath，静态文件所在的文件夹
    #${java.io.tmpdir}/xxx ：系统临时文件夹下的某个文件夹
    #${user.dir}/xxx  ：System.getProperty("user.dir")下的某个文件夹
    #绝对路径
docBase=/webapp/
##tomcat运行时临时文件所在的文件夹（默认在系统的临时文件夹
    #${java.io.tmpdir}/xxx ：系统临时文件夹下的某个文件夹
    #${user.dir}/xxx  ：System.getProperty("user.dir")下的某个文件夹
    #绝对路径
baseDir=tomcat/tmp/
##项目路径
contextPath="" 
webapp=/WebContent/
##webapps目录中增加新的目录、war文件、修改WEB-INF/web.xml，autoDeploy="true"会新建或重新部署应用
autoDeploy=false
##替换WEB-INF/lib目录中的jar文件或WEB-INF/classes目录中的class文件时，reloadable="true"会让修改生效
reloadable=false
##tomcat用于监听关机命令的端口
closePort=8005
##tomcat用于关机的命令
shutdown=SHUTDOWN
url-encoding=UTF-8
##设置Tomcat的Url中可以使用的特殊字符
requestTargetAllow=|{}[]

[Service]
##是否为注册中心,默认false
isRegistrycenter=false
##注册的服务名
serviceName=applicationName
##注册中心的地址
hostName=localhost
##注册中心端口
port=8864
##注册中心的访问地址
serviceUrl=http://${[Service]:hostName}:${[Service]:port}/lucyxfl/

;注册中心写法
;[Service]
;serviceName=Registrycenter
;isRegistrycenter=true
;

;服务写法
;[Service]
;serviceName=JackLamb
;hostName=localhost
;port=8864
;serviceUrl=http://${[Service]:hostName}:${[Service]:port}/lucyxfl/
;

#配置web设置
[Web]
#URL编码格式
encoding=UTF-8
#是否开启静态资源管理器
openStaticResourceManage=false
#静态文件的根目录
#${classpath}/xxx ：classpath下的某个文件夹 默认：${classpath}/webapps
#${user.dir}/xxx  ：System.getProperty("user.dir")下的某个文件夹
#${docBase}/xxx   : Tomcat的docBase下的某个文件夹
#绝对路径
webRoot=${classpath}/templates
#[文件上传]设置单个文件大小限制，单位：KB
multipartMaxFileSize=1*1024
#[文件上传]设置总文件大小为限制，单位：KB
multipartMaxRequestSize=10*1024
#是否开启POST请求类型转换(_method)
postChangeMethod=false
#json序列化方案
jsonSerializationScheme=com.lucky.jacklamb.utils.serializable.GsonSerializationScheme
#xml序列化方案
xmlSerializationScheme=com.lucky.jacklamb.utils.serializable.XtreamSerializationScheme
#全局资源前缀
prefix=/
#全局资源后缀
suffix=.jsp
#全局资源IP限制
globalResourcesIpRestrict=192.168.3.3,192.168.3.4
#静态资源Ip限制
staticResourcesIpRestrict=192.168.3.3,192.168.3.4
#httpClient连接超时时间（ms）
httpClient-connectTimeout=5000;
#httpClient连接请求超时时间(ms)
httpClient-connectionRequestTimeout=1000;
#httpClientsocket超时时间(ms)
httpClient-socketTimeout=5000;

##使用Thymeleaf模版引擎的配置
[Thymeleaf]
#使用的编码
encoding=UTF-8
#模版文件的位置
prefix=classpath:/templates/
#模版的后缀
suffix=.html
#是否启用缓存
cache=false
#模版的格式[HTML、XML、TEXT、JAVASCRIPT、CSS、RAW、HTML5、XHTML、VALIDXHTML、LEGACYHTML5、VALIDXML]
model=HTML

##邮件开发的发件人配置
[Email]
##SMTP服务器地址
smtpHost=smtp.qq.com
##SMTP服务端口
smtpPort=25
##POP3服务器地址
popHost=pop.qq.com
##POP3服务端口
popPort=110
##用户邮箱
email=用户邮箱
##发送邮件时展示的用户名
username=发邮件时的用户名
##邮箱密码
password=密码
smtpAuth=true
smtpStarttlsEnable=true
smtpStarttlsRequired=true

##使用SSH连接远程服务器的配置
[SSH]
##远程主机的地址
host=localhost
##SSH协议的端口
port=22
##登录名
user=root
##密码
password=""
identity="~/.ssh/id_rsa"
passphrase=""
connectTimeout=30000
sessionTimeout=30000

#添加Servlet
[Servlet]
servletName=servletClass
s1=c1
[Servlet Mapping]
servletName=/user/*,/admin/*
s1=/
[LoadOnStartup]
s1=-1

#添加Filter
[Filter]
filterName=filterClass
f1=c1
[Filter Mapping]
filterName=/*
f1=/query/*

#添加Listener
[Listener]
l1=ListenerClass1
l2=ListenerClass2

##配置Sql的ini文件的位置
[Mapper-Xml]
path=mapper

##配置项目打包后的jar包名字
[Jar]
name=lucky.jar

#开启后缀扫描,以reset:开始表示重置原始配置后再添加，无前缀则为追加
[Suffix Scan]
controller=controller,mycontroller
service=reset:service,myservice
repository=repository
aspect=aspect
component=component
websocket=websocket
pojo=pojo

##静态资源映射，将某个静态资源映射到一个特定的URL上
[StaticHandler]
/user/login=/user/login.html
/admin/update=/admin/update.html

#指定资源的Ip限制,一个资源只能被指定的ip访问
[SpecifiResourcesIpRestrict]
/user/query/=192.168.3.3,192.168.3.4
/file/test.jpg=192.168.3.3,192.168.3.4